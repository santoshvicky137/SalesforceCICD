name: Multi-Stage Salesforce Deployment with Rollback

on:
  push:
    branches:
      - qa
      - uat
      - preprod

env:
  API_VERSION: '60.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: salesforce/cli:latest-full

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v3

      - name: 🔐 Authenticate to Salesforce Org
        run: |
          if [[ "${GITHUB_REF##*/}" == "qa" ]]; then
            echo "${{ secrets.SFDX_AUTH_URL_QA }}" > auth-url.txt
          elif [[ "${GITHUB_REF##*/}" == "uat" ]]; then
            echo "${{ secrets.SFDX_AUTH_URL_UAT }}" > auth-url.txt
          elif [[ "${GITHUB_REF##*/}" == "preprod" ]]; then
            echo "${{ secrets.SFDX_AUTH_URL_PREPROD }}" > auth-url.txt
          fi
          sf org login sfdx-url --sfdx-url-file auth-url.txt --alias target-org --set-default

      - name: 🔍 Generate Delta Package
        run: bash scripts/generate-delta.sh

      - name: 🛑 Abort if Delta is Empty
        run: |
          if [[ -z "$(find delta/package -type f -not -name package.xml)" ]]; then
            echo "⚠️ No metadata changes detected. Skipping deployment."
            exit 0
          fi

      - name: 📦 Backup Delta from Org
        run: bash scripts/backup-delta.sh

      - name: ✅ Validate Deployment
        run: |
          echo "🔎 Validating deployment..."
          sf project deploy preview \
            --source-dir delta/package \
            --manifest delta/package/package.xml \
            --target-org target-org

      - name: 🚀 Deploy Delta to Org
        run: |
          echo "🚀 Deploying delta to org..."
          sf project deploy start \
            --source-dir delta/package \
            --manifest delta/package/package.xml \
            --target-org target-org \
            --wait 10 \
            --verbose

      - name: 🧹 Final Cleanup of Delta Folder
        if: success()
        run: |
          echo "🧹 Removing delta folder..."
          rm -rf delta
          echo "✅ Delta folder cleaned up."
